services:
  db:
    profiles: ["dev"]
    image: postgres:15.14
    restart: always
    container_name: echo-web-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: echo-web
    ports:
      - 5432:5432
    volumes:
      - db:/var/lib/postgresql/data

  db-test:
    profiles: ["test"]
    image: postgres:15.14
    container_name: echo-web-test-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: echo-web-test
    ports:
      - 5433:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db-test:/var/lib/postgresql/data

  e2e:
    profiles: ["test"]
    build:
      context: .
      dockerfile: playwright/Dockerfile
    container_name: echo-web-e2e-tests
    depends_on:
      db-test:
        condition: service_healthy
    environment:
      # Database
      DATABASE_URL: postgres://postgres:postgres@db-test:5432/echo-web-test

      # Admin
      ADMIN_KEY: foobar

      # API
      API_PORT: 8000
      NEXT_PUBLIC_API_URL: http://localhost:8000

      # Sanity
      NEXT_PUBLIC_SANITY_DATASET: testing
      PUBLIC_SANITY_DATASET: testing
      PUBLIC_SANITY_PROJECT_ID: pgq2pd26

      # Feide
      FEIDE_CLIENT_ID: test
      FEIDE_CLIENT_SECRET: test

      NEXTAUTH_SECRET: foobar

      PUBLIC_UNO_URL: http://localhost:8002
      PUBLIC_ECHOGRAM_URL: http://localhost:8001

      PUBLIC_COMMIT_HASH: test
      CI: "true"
    volumes:
      # Mount test results and reports back to host
      - ./playwright/playwright-report:/app/playwright/playwright-report
      - ./playwright/test-results:/app/playwright/test-results

volumes:
  db:
    driver: local
  db-test:
    driver: local
